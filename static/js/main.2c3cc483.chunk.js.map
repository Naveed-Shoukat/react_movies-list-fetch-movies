{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","initialState","searchTitle","isMovieLoading","isLoadingErr","FindMovie","addMovie","useState","state","setState","onSubmit","e","query","preventDefault","prevState","fetch","then","res","json","catch","Response","Error","response","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","disabled","onClick","App","setMovies","some","item","handelAddMovieToList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c3cc483.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\n\nconst defaultImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  addMovie: (movie: Movie) => void\n};\n\ninterface FindMovieState {\n  movie: Movie | null;\n  searchTitle: string;\n  isMovieLoading: boolean;\n  isLoadingErr: boolean;\n}\n\nconst initialState: FindMovieState = {\n  movie: null,\n  searchTitle: '',\n  isMovieLoading: false,\n  isLoadingErr: false,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [state, setState] = useState<FindMovieState>(initialState);\n\n  const handelSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setState(prevState => ({\n      ...prevState,\n      isMovieLoading: true,\n    }));\n\n    getMovie(state.searchTitle)\n      .then(response => {\n        if ('Error' in response) {\n          setState(prevState => ({\n            ...prevState,\n            isLoadingErr: true,\n          }));\n        } else {\n          const movie = {\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: response.Poster !== 'N/A' ? response.Poster : defaultImg,\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n            imdbId: response.imdbID,\n          };\n\n          setState(prevState => ({\n            ...prevState,\n            movie,\n          }));\n        }\n      })\n      .finally(() => setState(prevState => ({\n        ...prevState,\n        isMovieLoading: false,\n      })));\n  };\n\n  const handelAddBtn = () => {\n    if (state.movie !== null) {\n      addMovie(state.movie);\n    }\n\n    setState(initialState);\n  };\n\n  const handelSearchChange = (searchTitle: string) => {\n    setState(prevState => ({\n      ...prevState,\n      searchTitle,\n      isLoadingErr: false,\n    }));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handelSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={state.searchTitle}\n              onChange={(event) => handelSearchChange(event.target.value)}\n            />\n          </div>\n          {state.isLoadingErr && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': state.isMovieLoading },\n              )}\n              disabled={!state.searchTitle}\n            >\n              { state.movie !== null\n                ? 'Search again'\n                : 'Find a movie' }\n            </button>\n          </div>\n\n          {state.movie !== null && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handelAddBtn}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {(state.movie !== null) && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={state.movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2e360b15';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handelAddMovieToList = (movie: Movie) => {\n    const isDublicate = movies.some(item => item.imdbId === movie.imdbId);\n\n    if (!isDublicate) {\n      setMovies(prevState => ([\n        ...prevState,\n        movie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={(movie) => handelAddMovieToList(movie)} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}